// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Pokedex.Repositories;
using System;

namespace Pokedex.Repositories.Migrations
{
    [DbContext(typeof(PokedexContext))]
    partial class PokedexContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pokedex.Repositories.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BaseAttack");

                    b.Property<int>("BaseDefense");

                    b.Property<int>("BaseHP");

                    b.Property<int>("BaseSpAtk");

                    b.Property<int>("BaseSpDef");

                    b.Property<int>("BaseSpeed");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("Pokedex.Repositories.Models.PokemonSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("PokemonSkills");
                });

            modelBuilder.Entity("Pokedex.Repositories.Models.PokemonToPokemonSkill", b =>
                {
                    b.Property<int>("PokemonId");

                    b.Property<int>("PokemonSkillId");

                    b.HasKey("PokemonId", "PokemonSkillId");

                    b.HasIndex("PokemonSkillId");

                    b.ToTable("PokemonToPokemonSkill");
                });

            modelBuilder.Entity("Pokedex.Repositories.Models.PokemonToPokemonType", b =>
                {
                    b.Property<int>("PokemonId");

                    b.Property<int>("PokemonTypeId");

                    b.HasKey("PokemonId", "PokemonTypeId");

                    b.HasIndex("PokemonTypeId");

                    b.ToTable("PokemonToPokemonType");
                });

            modelBuilder.Entity("Pokedex.Repositories.Models.PokemonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("PokemonTypes");
                });

            modelBuilder.Entity("Pokedex.Repositories.Models.PokemonToPokemonSkill", b =>
                {
                    b.HasOne("Pokedex.Repositories.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonToPokemonSkills")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pokedex.Repositories.Models.PokemonSkill", "PokemonSkill")
                        .WithMany("PokemonToPokemonSkills")
                        .HasForeignKey("PokemonSkillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pokedex.Repositories.Models.PokemonToPokemonType", b =>
                {
                    b.HasOne("Pokedex.Repositories.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonToPokemonTypes")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pokedex.Repositories.Models.PokemonType", "PokemonType")
                        .WithMany("PokemonToPokemonTypes")
                        .HasForeignKey("PokemonTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
